// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures > tests/fixtures/basic.tsx 1`] = `
"// basic.js
import { ref, toRef, createPropsRestProxy, watch, createVNode } from 'vue';

function useApi(defaultName = ref('')) {
  const id = ref(1);
  const name = ref(defaultName);
  return {
    id,
    name
  };
}
let __MACROS_ref0 = useApi(),
  id1 = toRef(__MACROS_ref0, 'id', 0),
  name = toRef(__MACROS_ref0, 'name'),
  rest1 = createPropsRestProxy(__MACROS_ref0, ['id', 'name']);
;
id1.value == 0;
console.log({
  id1: id1.value,
  name: name.value,
  rest1
});
useApi(name);
function useArray() {
  const foo = ref(1);
  const bar = ref(2);
  [foo, bar];
  return [foo, bar];
}
let __MACROS_ref1 = useArray(),
  foo = toRef(__MACROS_ref1, '0', 0);
foo.value === 1;
foo.value = 1;

// @ts-expect-error
console.log($useApi());
console.log(name);
watch(name, () => {
  let name = 1;
  return {
    name
  };
});
defineExpose({
  name
});
const title = ref('title');
console.log(title);
const Comp = ({
  title
}) => title.value;
var basic = () => createVNode(Comp, {
  "title": title,
  "foo": title.value
}, {
  default: () => [title.value]
});

export { basic as default };
"
`;
